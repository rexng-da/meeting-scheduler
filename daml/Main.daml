module Main (Range, Meeting) where

data Range a = Range
  with
      start: a
      end: a

instance Eq a => Eq (Range a) where
  x == y = x.start == y.start && x.end == y.end

instance Show a => Show (Range a) where
  show (Range with ..) = show start <> "â€“" <> show end

range : Time -> Time -> Range Time
range start end =
    if start > end
    then Range with start = end, end = start
    else Range with ..

template Meeting
  with
    host : Party
    participants : [Party]
    timeRange : Range Time
  where
    signatory host, participants

template MeetingProposal
  with
    host : Party
    participants: [Party]
    timeRange : Range Time
  where 
    signatory host
    observer participants
    